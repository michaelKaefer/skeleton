# Ensure that PHP and yarn are installed in Travis' build environment. Travis provides several versions of
# PHP like 5.6, 7.0, 7.1, 7.2, 7.3, 7.4, etc., each of them including XDebug and PHPUnit.
language: generic

# Travis can cache content between builds. This speeds up the build process and saves resources.
cache:
  # This option is provided by Travis and caches the directory $HOME/.cache/yarn.
  yarn: true
  # With this option we can chose custom directories which should be cached between builds.
  directories:
    # Cache the directory where Symfony stores its slightly modified version of PHPUnit.
    - ./bin/.phpunit
    # Cache composer packages so "composer install" is faster.
    - $HOME/.composer/cache/files

env:
  global:
    # Symfony's PHPUnit bridge provides a modified version of PHPUnit. The modified PHPUnit is
    # written to a directory that can be configured by the SYMFONY_PHPUNIT_DIR env var, or in
    # the same directory as the simple-phpunit if it is not provided. It's also possible to set
    # this env var in the phpunit.xml.dist file.
    - SYMFONY_PHPUNIT_DIR=./bin/.phpunit

# Defines all jobs which Travis will run in parallel. For each PHP version we support we will run one job.
matrix:
  # With fast finishing enabled, Travis CI will mark your build as finished as soon as one of two
  # conditions are met: The only remaining jobs are allowed to fail, or a job has already failed. In
  # these cases, the status of the build can already be determined, so thereâ€™s no need to wait around
  # until the other jobs finish.
  fast_finish: true
  include:
    - php: 7.4
    #- php: 8.0

before_install:
#  - '[[ "$TRAVIS_PHP_VERSION" == "7.4snapshot" ]] || phpenv config-rm xdebug.ini'
  - composer self-update
  # Set memory to max to prevent memory failures.
#  - echo "memory_limit=-1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

install:
  - wget https://get.symfony.com/cli/installer -O - | bash
  - export PATH="$HOME/.symfony/bin:$PATH"
  - symfony -v
  # Install Composer packages including dev dependencies listed in require-dev.
  - composer install
  # Install PHPUnit
  - ./bin/phpunit install
  - cp -R tests/data/build/ public/
  - touch .env.local
  - make database-create-force-test

script:
  # There is no need to load data fixtures before running tests because the project repository
  # already includes a test database with all the fixtures needed to run the tests.
  - ./bin/phpunit
  # Check that the PHP source code follows the project's syntax rules
  - '[[ "$TRAVIS_PHP_VERSION" == "7.4" ]] || make lint-cs-fixer-dry-run'
#  # this checks that the YAML config files contain no syntax errors
#  - ./bin/console lint:yaml config --parse-tags
#  # this checks that the Twig template files contain no syntax errors
#  - ./bin/console lint:twig templates --env=prod
#  # this checks that the XLIFF translations contain no syntax errors
#  - ./bin/console lint:xliff translations
#  # this checks that arguments injected into services match type declarations
#  - ./bin/console lint:container
#  # TODO: replace the old security checker by the new checker provided by the 'symfony' binary
#  # this checks that the application doesn't use dependencies with known security vulnerabilities
#  #- ./bin/console security:check
#  # this checks that Doctrine's mapping configurations are valid
#  - ./bin/console doctrine:schema:validate --skip-sync -vvv --no-interaction
#  #  Fail CI if the repo is in a dirty state after building assets (only for current release ie install)
#  #-  if [[ "$ACTION" == "install" ]]; then yarn install && yarn encore production && git add --all && git diff --staged --exit-code; fi
#  - composer validate
