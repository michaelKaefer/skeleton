{"version":3,"sources":["Layout/DocumentLanguage.js","Security/AuthenticationContext.js","Layout/Header.js","Layout/Footer.js","Pages/NotFound.js","Layout/Content.js","App.js","serviceWorker.js","Components/Flash.js","Components/SubmitButton.js","Components/FormField.js","Utils/Client.js","Pages/Profile.js","Pages/Login.js","index.js","AppRouting.js"],"names":["DocumentLanguage","locale","useParams","undefined","Error","document","documentElement","lang","AuthenticationContext","createContext","Header","routing","useTranslation","t","i18n","useContext","user","logoutUser","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","supportedLocales","map","key","to","onClick","changeLanguage","ISO6391","getNativeName","role","firstName","lastName","icon","faUser","getRelativeUrl","Footer","NotFound","Content","params","Object","keys","routes","route","authorizedRoles","roles","some","r","includes","path","getPathRegex","React","createElement","component","getHomeRegex","withTranslation","useState","localStorage","getItem","JSON","parse","setUser","a","fetch","process","method","response","console","error","status","removeItem","log","Provider","value","loginUser","setItem","stringify","updateUser","join","defaultLocale","Boolean","window","location","hostname","match","swalWithBootstrapButtons","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","html","withReactContent","fire","title","faCheckCircle","showConfirmButton","timer","faTimesCircle","SubmitButton","isDisabled","isLoading","label","Button","disabled","style","paddingRight","Spinner","as","animation","size","aria-hidden","borderWidth","position","marginRight","FormField","name","hasError","isRequired","placeholder","autoFocus","FormGroup","htmlFor","BadRequestError","message","UnauthorizedError","url","headers","json","payload","this","throwHttpErrors","data","body","ok","Profile","validationSchema","yup","shape","email","max","required","onSubmit","values","actions","client","patch","flash","success","setSubmitting","form","initialValues","formikProps","touched","errors","Row","Col","length","isSubmitting","Card","Body","Login","history","useHistory","password","min","post","Location","get","push","setFieldError","Set","profile","en","de","login","localesRegex","regex","RegExp","test","pathname","i18next","init","interpolation","escapeValue","lng","fallbackLng","resources","translation","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.08e2257e.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\n\nexport default function DocumentLanguage() {\n  const { locale } = useParams();\n\n  if (locale === undefined) {\n    throw Error('The current route does not contain a locale parameter.');\n  }\n\n  document.documentElement.lang = locale;\n\n  return null;\n}\n","import { createContext } from 'react';\n\nexport const AuthenticationContext = createContext();\n","import './Header.scss';\nimport React, { useContext } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { Link, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport ISO6391 from 'iso-639-1';\nimport { AuthenticationContext } from '../Security/AuthenticationContext';\n\nexport default function Header({ routing }) {\n  const { locale } = useParams();\n  const { t, i18n } = useTranslation();\n  const { user, logoutUser } = useContext(AuthenticationContext);\n\n  return (\n      <nav\n          className=\"navbar navbar-expand-lg fixed-top navbar-light bg-white px-md-5\">\n        {/*Brand*/}\n        <a className=\"navbar-brand ml-lg-3 px-md-5\"\n           href=\"/\">Skeleton</a>\n\n        {/*Burger*/}\n        <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarMenu\"\n            aria-controls=\"navbarMenu\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"/>\n        </button>\n\n        <div\n            className=\"collapse navbar-nav navbar-collapse d-lg-flex justify-content-end\"\n            id=\"navbarMenu\">\n          {/*Language*/}\n          <div className=\"nav-item dropdown\">\n            <button\n                className=\"btn btn-link nav-link dropdown-toggle\"\n                id=\"languageSelector\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n            >\n              { t('header__choose_language') }\n            </button>\n            <div className=\"dropdown-menu\" aria-labelledby=\"languageSelector\">\n              {[...routing.supportedLocales].map(locale => (\n                <Link\n                    key={locale}\n                    className=\"dropdown-item\"\n                    to={`/${locale}/`}\n                    onClick={() => i18n.changeLanguage(locale)}\n                >{ISO6391.getNativeName(locale)}  <small>{locale}</small></Link>\n              ))}\n            </div>\n          </div>\n\n          {/*Account*/}\n          <div className=\"account nav-item dropdown px-md-5\">\n            <a className=\"nav-link dropdown-toggle\" href=\"###\"\n               id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n               aria-haspopup=\"true\" aria-expanded=\"false\">\n              {user ? user.firstName : ''} {user ? user.lastName : ''}&nbsp;&nbsp;<FontAwesomeIcon icon={faUser}/>\n            </a>\n            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              {/*Profile*/}\n              <Link\n                  className=\"dropdown-item\"\n                  to={routing.getRelativeUrl( locale, 'profile' )}\n              >{t('header__profile')}</Link>\n              {/*Admin*/}\n              {/*{% if is_granted('ROLE_ADMIN') %}*/}\n              <a className=\"dropdown-item\"\n                 href=\"###\">{ t('header__admin_area') }</a>\n              {/*{% endif %}*/}\n              <div className=\"dropdown-divider\"/>\n              {/*Logout*/}\n              <Link\n                  className=\"dropdown-item\"\n                  to={`/${locale}/`}\n                  onClick={() => logoutUser()}\n              >{t('header__logout')}</Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n  );\n}\n\n","import './Footer.scss';\nimport React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer className=\"\">\n      <hr/>\n\n      <div className=\"container py-4\">\n        <div className=\"row\">\n          <div className=\"col-6 col-md\">\n            <h5>Information</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"_text-muted\" href=\"/#\">Contact</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Shipping Terms</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Legal Notice</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Data Policy</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Imprint</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Payment</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Withdrawal</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">About Us</a></li>\n            </ul>\n          </div>\n          <div className=\"col-6 col-md\">\n            <h5>Landingpages</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"_text-muted\" href=\"/#\">My Landingpage</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">My Other Landingpage</a>\n              </li>\n              <li><a className=\"_text-muted\" href=\"/#\">My Final Landingpage</a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-6 col-md\">\n            <h5>Account</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"_text-muted\" href=\"/#\">Your Orders</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Your Addresses</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Your Personal Data</a>\n              </li>\n              <li><a className=\"_text-muted\" href=\"/#\">Your Treuebonus</a></li>\n            </ul>\n          </div>\n          <div className=\"col-6 col-md\">\n            <h5>Payment Methods</h5>\n            <ul className=\"list-unstyled text-small\">\n              <li><a className=\"_text-muted\" href=\"/#\">Klarna</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Invoice</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">SOFORT</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">mastercard</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Visa</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">maestro</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">PayPal</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Amazon Pay</a></li>\n              <li><a className=\"_text-muted\" href=\"/#\">Vorkasse</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <hr/>\n\n      <div className=\"container pb-3 text-muted\">\n        <span><a className=\"_text-muted\" href=\"/#\">Imprint</a></span>\n        <span> | </span>\n        <span><a className=\"_text-muted\" href=\"/#\">Legal Notice</a></span>\n        <span> | </span>\n        <span><a className=\"_text-muted\" href=\"/#\">Data Policy</a></span>\n      </div>\n    </footer>\n  );\n}\n\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div className=\"login card shadow\">\n      <div className=\"card-body\">\n        <h1 className=\"h5 card-title\">\n          not found\n        </h1>\n\n        <p>\n          !!!\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Redirect, Route, Switch, useParams } from 'react-router-dom';\nimport NotFound from '../Pages/NotFound';\nimport { AuthenticationContext } from '../Security/AuthenticationContext';\n\nexport default function Content(params) {\n  const { routing } = params;\n  const { locale } = useParams();\n  const { user } = useContext(AuthenticationContext);\n\n  return (\n      <div className=\"content\">\n        <Switch>\n\n          {/*Routes*/}\n          {Object.keys(routing.routes).map(route => {\n            const userIsAuthorized = (\n                routing.routes[route].authorizedRoles === null\n                ? true\n                : user && user.roles.some(r => routing.routes[route].authorizedRoles.includes(r))\n            );\n\n            if (userIsAuthorized) {\n              return (\n                <Route\n                  key={route}\n                  path={routing.getPathRegex(route)}\n                >\n                  {React.createElement(routing.routes[route].component, {routing})}\n                </Route>\n              );\n            } else {\n              return (\n                <Route\n                  key={route}\n                  path={routing.getPathRegex(route)}\n                >\n                  <Redirect to={routing.getRelativeUrl(locale, 'login')} />\n                </Route>\n              );\n            }\n          })}\n\n          {/*Home does not exist so we redirect to login*/}\n          <Route\n              path={routing.getHomeRegex()}\n          >\n            <Redirect to={`/${locale}/login`} />\n          </Route>\n\n          {/*NotFound*/}\n          <Route>\n            <NotFound />\n          </Route>\n\n        </Switch>\n      </div>\n  );\n}\n\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport 'bootstrap';\nimport './App.scss';\nimport DocumentLanguage from './Layout/DocumentLanguage';\nimport Header from './Layout/Header';\nimport { withTranslation } from 'react-i18next';\nimport Footer from './Layout/Footer';\nimport Content from './Layout/Content';\nimport { AuthenticationContext } from './Security/AuthenticationContext';\n\nfunction App(params) {\n  const { routing } = params;\n  const [user, setUser] = useState(\n      localStorage.getItem('user') !== null\n          ? JSON.parse(localStorage.getItem('user'))\n          : null\n  );\n\n  function loginUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n    setUser(user);\n  }\n\n  function updateUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n    setUser(user);\n  }\n\n  async function logoutUser(user) {\n    let response;\n\n    try {\n      response = await fetch(process.env.REACT_APP_LOGOUT_URL, {\n        method: 'GET',\n      });\n    }\n    catch (e) {\n      console.error(e);\n      return;\n    }\n\n    if (response.status !== 200) {\n      console.error(response);\n      return;\n    }\n\n    localStorage.removeItem('user');\n    setUser(null);\n    console.log('Logged out');\n  }\n\n  return (\n    <AuthenticationContext.Provider value={{ user, loginUser, logoutUser, updateUser }}>\n      <Router>\n        <Switch>\n          <Route path={`/:locale(${[...routing.supportedLocales].join('|')})`}>\n            <DocumentLanguage />\n            <div className=\"App container-fluid p-0\">\n              <Header routing={routing}/>\n              <main className=\"container\">\n                <Content routing={routing}/>\n              </main>\n              <Footer/>\n            </div>\n          </Route>\n\n          {/*Missing locale*/}\n          <Route>\n            <Redirect to={`/${routing.defaultLocale}/`} />\n          </Route>\n        </Switch>\n      </Router>\n    </AuthenticationContext.Provider>\n  );\n}\n\nexport default withTranslation('common')(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './Flash.scss';\nimport React from 'react';\nimport withReactContent from 'sweetalert2-react-content';\nimport Swal from \"sweetalert2\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst swalWithBootstrapButtons = Swal.mixin({\n  customClass: {\n    confirmButton: 'btn btn-primary',\n    cancelButton: 'btn btn-danger'\n  },\n  buttonsStyling: false\n});\n\nclass Flash {\n  success(html) {\n    withReactContent(swalWithBootstrapButtons).fire({\n      title: <FontAwesomeIcon className=\"text-success\" icon={faCheckCircle}/>,\n      html: html,\n      showConfirmButton: false,\n      timer: 1000,\n    });\n  }\n\n  error(html) {\n    withReactContent(swalWithBootstrapButtons).fire({\n      title: <FontAwesomeIcon className=\"text-danger\" icon={faTimesCircle}/>,\n      html: html,\n    });\n  }\n}\n\nexport default new Flash();\n","import Button from 'react-bootstrap/Button';\nimport { Spinner } from 'react-bootstrap';\nimport React from 'react';\n\nexport default function SubmitButton({ isDisabled, isLoading, label }) {\n  return (\n    <Button\n      type=\"submit\"\n      disabled={isLoading || isDisabled}\n    >\n      {isLoading ? (\n        <span style={{\n          paddingRight: '3px',\n        }}>\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                  style={{\n                    borderWidth: '0.12em',\n                    position: 'relative',\n                    marginRight: '9px',\n                  }}\n                />\n                <span>Loading...</span>\n              </span>\n      ): (\n        <span>{label}</span>\n      )}\n    </Button>\n  );\n}\n","import React from 'react';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport { ErrorMessage, Field } from 'formik';\n\nexport default function FormField({ name, type, hasError, label = false, isRequired = false, placeholder = '', autoFocus = false }) {\n  return (\n    <FormGroup>\n      {label !== false ? (\n        <label\n          htmlFor={name}\n          className={isRequired ? 'required' : ''}\n        >{label}</label>\n      ) : null}\n\n      <Field\n        id={name}\n        type={type}\n        name={name}\n        className={`form-control${hasError ? ' error' : ''}`}\n        placeholder={placeholder}\n        autoFocus={autoFocus}\n      />\n\n      {hasError ? (\n        <ErrorMessage\n          className=\"error-message\"\n          name={name}\n          component=\"div\"\n        />\n      ) : null}\n    </FormGroup>\n  );\n}\n","class BadRequestError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'BadRequestError';\n  }\n}\n\nclass UnauthorizedError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'UnauthorizedError';\n  }\n}\n\nclass Client {\n  async get(url) {\n    let response;\n    let payload;\n\n    try {\n      response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      payload = await response.json();\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n\n    this.throwHttpErrors(response, payload);\n\n    return { response, payload };\n  }\n\n  async patch(url, data) {\n    let response;\n    let payload;\n\n    try {\n      response = await fetch(url, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/merge-patch+json',\n        },\n        body: JSON.stringify(data),\n      });\n      payload = await response.json();\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n\n    this.throwHttpErrors(response, payload);\n\n    return { response, payload };\n  }\n\n  async post(url, data) {\n    let response;\n    let payload;\n\n    try {\n      response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      payload = await response.json();\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n\n    this.throwHttpErrors(response, payload);\n\n    return { response, payload };\n  }\n\n  throwHttpErrors(response, payload) { // Should be a private method\n    if (!response.ok) {\n      console.error(response, payload);\n\n      switch (response.status) {\n        case 400:\n          throw new BadRequestError('Status code is 400.');\n        case 401:\n          throw new UnauthorizedError('Status code is 401.');\n        default:\n          throw new Error('Status code does not match 2xx.');\n      }\n    }\n  }\n}\n\nexport default new Client();\n","import './Profile.scss';\nimport React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { Form, Formik } from 'formik';\nimport { AuthenticationContext } from '../Security/AuthenticationContext';\nimport flash from '../Components/Flash';\nimport SubmitButton from '../Components/SubmitButton';\nimport FormField from '../Components/FormField';\nimport client from '../Utils/Client';\n\nexport default function Profile() {\n  const {t} = useTranslation();\n  const {user, updateUser} = useContext(AuthenticationContext);\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Must be a valid email address')\n      .max(100, 'Email must be less than 100 characters')\n      .required('An email is required'),\n    firstName: yup\n      .string()\n      .required('A first name is required'),\n    lastName: yup\n      .string()\n      .required('A last name is required'),\n  });\n\n  const onSubmit = async (values, actions) => {\n    const url = `${process.env.REACT_APP_API_BASE_URL}${user['@id']}`;\n\n    try {\n      const { payload } = await client.patch(url, values);\n      updateUser(payload);\n      flash.success(t('success__updated'));\n    } catch (e) {\n      actions.setSubmitting(false);\n      flash.error(t('errors__unknown'));\n    }\n  };\n\n  const form = (\n    <Formik\n      initialValues={{\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n      }}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {formikProps => (\n        <Form>\n          <FormField\n            name=\"email\"\n            type=\"email\"\n            label={t('login__email_label')}\n            hasError={formikProps.touched.email && formikProps.errors.email}\n            isRequired={true}\n            placeholder=\"john.doe@example.com\"\n            autoFocus={true}\n          />\n\n          <Row>\n            <Col>\n              <FormField\n                name=\"firstName\"\n                type=\"text\"\n                label={t('login__first_name_label')}\n                hasError={formikProps.touched.firstName &&\n                formikProps.errors.firstName}\n                isRequired={true}\n                placeholder=\"John\"\n              />\n            </Col>\n            <Col>\n              <FormField\n                name=\"lastName\"\n                type=\"text\"\n                label={t('login__last_name_label')}\n                hasError={formikProps.touched.lastName &&\n                formikProps.errors.lastName}\n                isRequired={true}\n                placeholder=\"Doe\"\n              />\n            </Col>\n          </Row>\n\n          <SubmitButton\n            isDisabled={Object.keys(formikProps.errors).length}\n            isLoading={formikProps.isSubmitting}\n            label={t('profile__save_button_label')}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n\n  return (\n    <Card className=\"main-page-content shadow\">\n      <Card.Body>\n        <h1 className=\"h5 card-title\">\n          {t('profile__heading')}\n        </h1>\n\n        {form}\n      </Card.Body>\n    </Card>\n  );\n}\n","import './Login.scss';\nimport React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Card } from 'react-bootstrap';\nimport { AuthenticationContext } from '../Security/AuthenticationContext';\nimport { useHistory, useParams } from 'react-router-dom';\nimport client from '../Utils/Client';\nimport flash from '../Components/Flash';\nimport SubmitButton from '../Components/SubmitButton';\nimport FormField from '../Components/FormField';\n\nexport default function Login({routing}) {\n  const {locale} = useParams();\n  const {t} = useTranslation();\n  const {loginUser} = useContext(AuthenticationContext);\n  let history = useHistory();\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string()\n      .email('Must be a valid email address')\n      .max(100, 'Email must be less than 100 characters')\n      .required('An email is required'),\n    password: yup\n      .string()\n      .min(6, 'Password must have at least 6 characters')\n      .required('A password is required'),\n  });\n\n  const onSubmit = async (values, actions) => {\n    // Login user on server and receive the URL where we can retrieve the user resource\n    let location;\n    try {\n      const { payload } = await client.post(process.env.REACT_APP_LOGIN_URL, values);\n      location = payload.Location;\n    } catch (e) {\n      if (e.name === 'UnauthorizedError') {\n        actions.setSubmitting(false);\n        flash.error(t('errors__invalid_credentials'));\n      } else {\n        actions.setSubmitting(false);\n        flash.error(t('errors__unknown'));\n      }\n      return;\n    }\n\n    // Get user info\n    const url = `${process.env.REACT_APP_API_BASE_URL}${location}`;\n    try {\n      const { payload } = await client.get(url);\n\n      // Login user in React\n      loginUser(payload); // The payload only contains the user object\n      actions.setSubmitting(false);\n      flash.success(t('success__login'));\n      history.push(routing.getRelativeUrl(locale, 'profile'));\n    } catch (e) {\n      actions.setFieldError('submitFailure', t('errors__unknown'));\n      actions.setSubmitting(false);\n    }\n  };\n\n  const form = (\n    <Formik\n      initialValues={{\n        email: 'admin@example.com',\n        password: '123123',\n      }} // Todo: remove dev-placeholders :)\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {formikProps => (\n        <Form>\n          <FormField\n            name=\"email\"\n            type=\"email\"\n            label={t('login__email_label')}\n            hasError={formikProps.touched.email && formikProps.errors.email}\n            isRequired={true}\n            placeholder=\"john.doe@example.com\"\n            autoFocus={true}\n          />\n          <FormField\n            name=\"password\"\n            type=\"password\"\n            label={t('login__password_label')}\n            hasError={formikProps.touched.password && formikProps.errors.password}\n            isRequired={true}\n          />\n\n          <SubmitButton\n            isDisabled={Object.keys(formikProps.errors).length}\n            isLoading={formikProps.isSubmitting}\n            label={t('login__login_button_label')}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n\n  return (\n    <Card className=\"main-page-content shadow\">\n      <Card.Body>\n        <h1 className=\"h5 card-title\">\n          {t('login__heading')}\n        </h1>\n\n        <p>\n          <a href=\"/#\">{t('login__go_to_registration')}</a>\n        </p>\n\n        {form}\n\n        <p className=\"mt-2\">\n          <a href=\"/#\">{t('login__forgot_password')}</a>\n        </p>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { I18nextProvider } from 'react-i18next';\nimport i18next from 'i18next';\nimport AppRouting from './AppRouting';\n\nconst routing = new AppRouting();\n\n// After a locale switch or on initial request for a locale (eg: /de) we set the locale\nlet locale = routing.defaultLocale;\nconst localesRegex = [...routing.supportedLocales].join('|');\nconst regex = new RegExp(`^/(${localesRegex})/?`);\nif (regex.test(window.location.pathname)) {\n  locale = window.location.pathname.match(regex)[1];\n}\n\ni18next.init({\n  interpolation: { escapeValue: false },  // React already does escaping\n  lng: locale,\n  fallbackLng: routing.defaultLocale,\n  resources: {\n    en: {\n      translation: {\n        // Success messages\n        'success__updated': 'Updated successfully!',\n        'success__login': 'Logged in successfully!',\n        // Error messages\n        'errors__invalid_credentials': 'Invalid credentials, please try again!',\n        'errors__unknown': 'Unknown error, please try again or contact us!',\n        // Header\n        'header__profile': 'Profile',\n        'header__admin_area': 'Admin area',\n        'header__logout': 'Logout',\n        'header__choose_language': 'Language',\n        // Login\n        'login__heading': 'Login',\n        'login__go_to_registration': 'Go to registration',\n        'login__email_label': 'Email',\n        'login__password_label': 'Password',\n        'login__forgot_password': 'Forgot password',\n        'login__login_button_label': 'Login',\n        // Profile\n        'profile__heading': 'Profile',\n        'profile__go_to_registration': 'Go to registration',\n        'login__first_name_label': 'First name',\n        'login__last_name_label': 'Last name',\n        'profile__save_button_label': 'Save',\n      },\n    },\n    de: {\n      translation: {\n        // Success messages\n        'success__updated': 'Erfolgreich bearbeitet!',\n        'success__login': 'Erfolgreich eingeloggt!',\n        // Error messages\n        'errors__invalid_credentials': 'Ungültige Zugangsdaten, bitte versuchen sie es erneut!',\n        'errors__unknown': 'Unbekannter Fehler, bitte versuchen Sie es erneut oder kontaktieren Sie uns!',\n        // Header\n        'header__profile': 'Profil',\n        'header__admin_area': 'Adminbereich',\n        'header__logout': 'Logout',\n        'header__choose_language': 'Sprache',\n        // Login\n        'login__heading': 'Login',\n        'login__go_to_registration': 'Zur Registrierung',\n        'login__email_label': 'E-Mail',\n        'login__password_label': 'Passwort',\n        'login__forgot_password': 'Passwort vergessen',\n        'login__login_button_label': 'Login',\n        // Profile\n        'profile__heading': 'Profil',\n        'profile__go_to_registration': 'Zur Registrierung',\n        'login__first_name_label': 'Vorname',\n        'login__last_name_label': 'Nachname',\n        'profile__save_button_label': 'Speichern',\n      },\n    },\n  },\n});\n\nReactDOM.render(\n    <I18nextProvider i18n={i18next}>\n      <App routing={routing}/>\n    </I18nextProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Profile from './Pages/Profile';\nimport Login from './Pages/Login';\n\nexport default class AppRouting {\n  constructor() {\n    this.supportedLocales = new Set(['en', 'de']);\n    this.defaultLocale = 'en';\n    this.routes = {\n      profile: {\n        path: {\n          en: 'profile',\n          de: 'profil',\n        },\n        component: Profile,\n        authorizedRoles: ['ROLE_USER', 'ROLE_ADMIN'],\n      },\n      login: {\n        path: {\n          en: 'login',\n          de: 'login',\n        },\n        component: Login,\n        authorizedRoles: null,\n      },\n    };\n  }\n\n  getPathRegex(route) {\n    const locale = `:locale(${[...this.supportedLocales].join('|')})`;\n    const path = Object.values(this.routes[route].path).join('|');\n    return `/${locale}/(${path})`;\n  }\n\n  getHomeRegex() {\n    const locale = `:locale(${[...this.supportedLocales].join('|')})`;\n    return `/${locale}/`;\n  }\n\n  getRelativeUrl(locale, route) {\n    return `/${locale}/${this.routes[route].path[locale]}`;\n  }\n}\n"],"sourceRoot":""}