security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            access_denied_handler: App\Security\AccessDeniedHandler
            logout:
                # Route for logging in
                path: logout
                # Route to redirect to after logout
                target: login
                # Service that gets called on successful logout
                success_handler: App\Service\LogoutSuccessHandler
            json_login:
                # Route which is used for JSON login
                check_path: api_login
                # Key of the JSON request which is used as the username for logging the user in
                username_path: email
                # Key of the JSON request which is used as the password for logging the user in
                password_path: password

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
